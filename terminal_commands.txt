{ "commands": [
"for f in *.jar; do if jar -tf $f | grep -q javax.servlet; then echo $f; fi; done",
"dd if=/dev/zero of=/fs/to/fill/dummy00 bs=8192 count=$(df --block-size=8192 / | awk 'NR!=1 {print $4-100}')",
"nc <ip> <port> -vnc -zw2 www.example.com 80 && echo openlsof -i :22nmap -p 80 hostnameif (nc -zw2 www.example.com 80); then echo open; fifuser -n tcp -s <port> && echo \"+open\"",
"jda() { cd $(pwd | sed \"s/\(\/$@\/\).*/\1/g\"); }upto() { cd \"${PWD/\/$@\/*//$@}\" }jd() { cd **/\"$@\"; }",
"fdupes -R -1 path | while read -r line; do (echo $line | xargs -n 1 | (first=\"true\"; firstfile=\"\"; while read file; do if [ \"$first\" == \"true\" ]; then first=\"false\"; firstfile=$file; else ln --force \"$firstfile\" \"$file\"; fi; done)); done",
"emerge -av1 $(for e in `qlist -I --nocolor | uniq`; do for f in `qlist -e $e`; do if test ! -e $f; then echo $e; echo $e: missing $f 1>&2; fi; done; done)emerge -av1 `qlist --installed --nocolor | uniq | while read cp; do qlist --exact $cp | while read file; do test -e $file || { echo $cp; echo \"$cp: missing $file (and maybe more)\" 1>&2; break; }; done; done`",
"removedir(){ read -p \"Delete the current directory $PWD ? \" human;if [ \"$human\" = \"yes\" ]; then [ -z \"${PWD##*/}\" ] && { echo \"$PWD not set\" >&2;return 1;}; rm -Rf ../\"${PWD##*/}\"/ && cd ..; else echo \"I'm watching you\" | pv -qL 10; fi; }",
"find . -maxdepth 1 -iname '*jpg' -exec convert -quality 60 {} lowQ/{} \;",
"emerge -av1 `qlist --installed --nocolor | uniq | while read cp; do qlist --exact $cp | while read file; do test -e $file || { echo $cp; echo \"$cp: missing $file (and maybe more)\" 1>&2; break; }; done; done`emerge -av1 $(for e in `qlist -I --nocolor | uniq`; do for f in `qlist -e $e`; do if test ! -e $f; then echo $e; echo $e: missing $f 1>&2; fi; done; done)",
"mkdir save && for f in *.mp3; do lame -b xxx \"$f\" ./save/\"${f%.mp3}.mp3\"; done",
"termtrace(){( strace -s 1000 -e write tput $@ 2>&2 2>&1 ) | grep -o '\"[^\"]*\"';}",
"START=20; END=50 echo $(($START+(`od -An -N2 -i /dev/random`)%($END-$START+1)))",
"curl --basic --user username:password --data status=\"Twitter from commandline with curl\" https://twitter.com/statuses/update.xml",
"silent(){ $@ > /dev/null 2>&1; }; alias shh=silent",
"SOURCE: dd if=/dev/sda bs=16065b | netcat ip-target 1234 TARGET: netcat -l -p 1234 | dd of=/dev/mapper/laptop bs=16065b STATS on target: watch -n60 -- kill -USR1 $(pgrep dd)",
"find . | shuf -n1shuf -n1 -e *ls -1 | shuf -n 1a=(*); echo ${a[$((RANDOM % ${#a[@]}))]}for i in *; do echo \"$i\"; done | shuf -n1ls -1 | awk 'BEGIN{srand()} {x[NR] = $0} END{print \"Selected\", x[1 + int(rand() * NR)]}'",
"git config --global --add alias.ff \"pull --no-commit -v\" ; git ff",
"for db in $(mysql -e 'show databases' -s --skip-column-names); do mysqldump $db | gzip > \"/backups/mysqldump-$(hostname)-$db-$(date +%Y-%m-%d-%H.%M.%S).gz\"; donefor I in $(mysql -e 'show databases' -s --skip-column-names); do mysqldump $I | gzip > \"$I.sql.gz\"; donefor I in `echo \"show databases;\" | mysql | grep -v Database`; do    mysqldump $I > \"$I.sql\"; donemysql -e 'show databases' | sed -n '2,$p' | xargs -I DB 'mysqldump DB > DB.sql'while read; do mysqldump $REPLY | gzip > \"/backup/mysql/$REPLY.sql.gz\"; done < <( mysql -e 'show databases' -s --skip-column-names )",
"cd /etc/network/if-up.d && iptables-save > firewall.conf && echo -e '#!/bin/sh -e\niptables-restore < $(dirname $0)/firewall.conf' > iptables && chmod a+x iptablesiptables-save > firewall.conf; rm -f /etc/network/if-up.d/iptables; echo '#!/bin/sh' > /etc/network/if-up.d/iptables; echo \"iptables-restore < firewall.conf\" >> /etc/network/if-up.d/iptables; chmod +x /etc/network/if-up.d/iptables",
"echo \"${PATH//:/$'\n'}\"echo $PATH | tr \: \\n( IFS=:; for p in $PATH; do echo $p; done )echo -e ${PATH//:/\\n}echo src::${PATH} | awk 'BEGIN{pwd=ENVIRON[\"PWD\"];RS=\":\";FS=\"\n\"}!$1{$1=pwd}$1!~/^\//{$1=pwd\"/\"$1}{print $1}'print -l $path",
"say='festival --tts'; S=$(date +%s); echo $(echo $S | cut -b 1-1)\" billion\" | $say ; echo $(echo $S | cut -b 2-4 | sed 's/0*//')\" million\"| $say; echo $(echo $S | cut -b 5-7 | sed 's/0*//')\" thousand\"| $say",
"xv() { case $- in *[xv]*) set +xv;; *) set -xv ;; esac }function setx(){ sed '/[xv]/!Q2' <<< $- && { set +xv; export PS4=\">>> \"; } || { export PS4=\"`tput setaf 3`>>> `tput sgr0`\"; set -xv; }; }",
"history -c && rm -f ~/.bash_historyhistory -cecho \"\" > .bash_history",
"tar --exclude=\".??*\" -zcvf ./home_backup_2008.tar.gz  my_home",
"scp /home/svnlabs.txt root@92.178.0.56:/home/scp -P 22 /home/svnlabs.txt  root@92.178.0.56:/home/svnlabs.txt",
"ifconfig eth1 | grep inet\ addr | awk '{print $2}' | cut -d: -f2 | sed s/^/eth1:\ /g",
"curl -u yourusername:yourpassword -d status=?Your Message Here? https://twitter.com/statuses/update.xml",
"composite -geometry 96x96+250+70 foreground.jpg background.jpg image.jpg",
"find . -name .DS_Store -exec rm {} \;",
"ssh user@<source_host> -- tar cz <path> | ssh user@<destination_host> -- tar vxzC <path>ssh root@host1 \"cd /somedir/tocopy/ && tar -cf - .\" | ssh root@host2 \"cd /samedir/tocopyto/ && tar -xf -\"",
"<ctrl+p> for previous command; <ctrl+n> for next command",
"ffmpeg -f alsa -r 16000 -i hw:2,0 -f video4linux2 -s 800x600 -i /dev/video0 -r 30 -f avi -vcodec mpeg4 -vtag xvid -sameq -acodec libmp3lame -ab 96k output.avi",
"'ls -1 *<pattern>* | while read file; do scp $file user@host:/path/; if [[ $? -eq 0 ]]; then rm $file; fi; done'",
"In MySQL client, \P less -Smysql --pager=\"less -niSFX\"",
"find . \( -iname '*.cpp' -o -iname '*.h' \) -exec wc -l {} \; | sort -n | cut --delimiter=.  -f 1 | awk '{s+=$1} END {print s}'",
"wget -q -O - `youtube-dl -b -g $url`| ffmpeg -i - -f mp3 -vn -acodec libmp3lame -| mpg123  -url=\"$my_url\";file=$(youtube-dl -s -e $url);wget -q -O - `youtube-dl -b -g $url`| ffmpeg -i - -f mp3 -vn -acodec libmp3lame - > \"$file.mp3\"",
"yes | pv | ssh $host \"cat > /dev/null\"pv /dev/zero|ssh $host 'cat > /dev/null'",
"ssh user@remotehost [anycommand](i.e uptime,w)",
"watch() { while true; do echo \"<Ctrl+V><Ctrl+L>Every 2.0s: $@\"; date; eval \"$@\"; sleep 2; done }",
"find /DirectoryWhereMyMp3sAre/ -regextype posix-egrep -iregex '.*?\.(ogg|mp3)' | sort > ~/mylist.m3uls -w 1 > list.m3ufind /DirectoryWhereMyMp3sAre/ -name *.mp3 | grep \"andy\" > ~/mylist",
"svn log -v -r{2009-11-1}:HEAD | awk '/^r[0-9]+ / {user=$3} /./{if (user==\"george\") {print}}' | grep -E \"^   M|^   G|^   A|^   D|^   C|^   U\" | awk '{print $2}' | sort | uniqsvn log -v -r{2009-05-21}:HEAD | awk '/^r[0-9]+ / {user=$3} /yms_web/ {if (user==\"george\") {print $2}}' | sort | uniq",
"O=$IFS;IFS=$'\n'; D=$(for f in *;do  [[ -d $f ]] && du -sh \"$f\";done | sort -gr);F=$(for f in *;do [[ -f $f ]] && du -sh \"$f\";done | sort -gr);IFS=$O;echo \"$D\";echo \"$F\"ncduls -shF --color",
"echo \"<?php phpinfo(); ?>\" | php > phpinfo.txtphp -iphp -r \"phpinfo();\"",
"wajig largedpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -ndpigsdpkg --get-selections | cut -f1 | while read pkg; do dpkg -L $pkg | xargs -I'{}' bash -c 'if [ ! -d \"{}\" ]; then echo \"{}\"; fi' | tr '\n' '\000' | du -c --files0-from - | tail -1 | sed \"s/total/$pkg/\"; donesed -ne '/^Package: \(.*\)/{s//\1/;h;};/^Installed-Size:  \(.*\)/{s//\1/;G;s/\n/ /;p;}' /var/lib/dpkg/status | sort -rnawk '{if ($1 ~ /Package/) p = $2; if ($1 ~ /Installed/) printf(\"%9d %s\n\", $2, p)}'  /var/lib/dpkg/status | sort -n | tail",
"diff -U99999 original.css modified.css  | awk '/^-/{next} {f=f\"\n\"$0} /^\+.*[^ ]/{yes=1} /}/ {if(yes){print f} f=\"\";yes=0}'",
"find . -name \*.php -exec php -l \"{}\" \;",
"sed -n 's/.*<title>\(.*\)<\/title>.*/\1/ip;T;q' file.htmlawk 'BEGIN{IGNORECASE=1;FS=\"<title>|</title>\";RS=EOF} {print $2}' file.htmltr -d \"\n\r\" | grep -ioEm1 \"<title[^>]*>[^<]*</title\" | cut -f2 -d\> | cut -f1 -d\<awk 'BEGIN{IGNORECASE=1;FS=\"<title>|</title>\";RS=EOF} {print $2}' | sed '/^$/d' > file.html",
"ls *.jpg | awk -F'.' '{ printf \"%s %04d.%s\n\", $0, $1, $2; }' | xargs -n2 mvrename 's/\d+/sprintf(\"%04d\",$&)/e' *.jpgfor i in $(seq -w 0 100) ; do mv prefix$(( 10#$i )).jpg prefix${i}.jpg ; done",
"find . -regex \".*\.[cChH]\(pp\)?\" -print | etags -",
"awk '/sshd/ && /Failed/ {gsub(/invalid user/,\"\"); printf \"%-12s %-16s %s-%s-%s\n\", $9, $11, $1, $2, $3}' /var/log/auth.log",
"tweet(){ curl -u \"$1\" -d status=\"$2\" \"http://twitter.com/statuses/update.xml\"; }curl -u user:pass -d status=\"Tweeting from the shell\" http://twitter.com/statuses/update.xmlcurl -u user -d status=\"Tweeting from the shell\" http://twitter.com/statuses/update.xmlcurl -u twitter-username -d status=\"Hello World, Twitter!\" -d source=\"cURL\" http://twitter.com/statuses/update.xmltweet () { curl -u UserName -d status=\"$*\" http://twitter.com/statuses/update.xml; }curl -u YourUsername:YourPassword -d status=\"Your status message go here\" http://twitter.com/statuses/update.xml",
"ln -nvfs /source /destinationln -nsf <TARGET> <LINK>",
"git-createrepo() { repos_path='/srv/git/'; mkdir $repos_path$1; cd $repos_path$1;   git init --bare;   echo \"Repository location: ssh://$USER@`cat /etc/HOSTNAME``pwd`\"; cd -; }",
"echo \"12345,12346\" |sed -e's/ //'|tr \",\" \"\n\"| while read line; do  echo -n $line\" \"; svn log -vr $line https://url/to/svn/repository/|grep \"/\"|head -1|cut -d\"/\" -f2; done",
"echo 1 > /proc/sys/kernel/sysrq; echo b > /proc/sysrq-trigger",
"git show --relative --pretty=format:'' --name-only HASH",
"pdftk in.pdf cat 1S output out.pdf",
"echo $(($(seq -s* 10)))seq -s* 10 |bcecho $(( $(echo 1 \"* \"{2..10}) ))seq 10 | paste -sd* | bcdc -e '10 [q]sq[dd1=q1-lxx*]dsxxp'",
"dig -x 74.125.45.100sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).in-addr.arpa domain name pointer\(.*\)\./\4.\3.\2.\1\5/' \ lookups.txt",
"cat /sys/block/{*,*/*}/holders/dm*/dm/name | awk -F- '{print $1}' | sort -u",
"tmux attach || tmux newalias ltmux=\"if tmux has; then tmux attach; else tmux new; fi\"if tmux has; then tmux attach -d; else tmux new; fi",
"cat my.sandbox.cnf | awk -F \"=\" 'NF < 2 {print} sub(\"=\", \"=~placeholder~=\") {print}' | awk -F \"=~placeholder~=\" 'NF < 2 {gsub(\"-\", \"_\", $0); print} NF==2 {gsub(\"-\", \"_\", $1); print $1 \"=\" $2}'",
"echo $(shuf -n4 /usr/share/dict/words)echo $(grep \"^[^'A-Z]\{3,7\}$\" /usr/share/dict/words|shuf -n4)",
"# aptitude purge ~cdpkg --list | grep '^rc\b' | awk '{ print $2 }' | xargs sudo dpkg -Paptitude purge ~captitude purge ~c",
"MyVAR=85 awk '{ print ENVIRON[\"MyVAR\"] }'MyVAR=86; awk -v n=$MyVAR '{print n}'VAR=\"foo\" ; awk '{ print '\"$VAR\"' }'MyVAR=84; awk '{ print \"'\"$MyVAR\"'\" }'",
"uptime | cut -d \",\" -f 1 | cut -d \" \" -f 4-",
"tar dfz horde-webmail-1.2.3.tar.gz",
"wget -r --wait=5 --quota=5000m --tries=3 --directory-prefix=/home/erin/Documents/erins_webpages  --limit-rate=20k  --level=1 -k -p -erobots=off -np -N  --exclude-domains=del.icio.us,doubleclick.net -F -i ./delicious-20090629.htm",
"svn status | grep '^?' | sed -e 's/^? */svn add \"/g' -e 's/$/\"/g'|sh ; svn status | grep '^!' | sed -e 's/^! */svn delete \"/g' -e 's/$/\"/g'|sh",
"for i in $(netstat --inet -n|grep ESTA|awk '{print $5}'|cut -d: -f1);do geoiplookup $i;done",
"cat foo.json | python -mjson.tool",
"Server side: while true; do tar cvzf - ./* | nc -l 2000; done, client side: nc localhost 2000 | tar xvzf -",
"pktsize=1516;for i in $( seq $pktsize -8 1450 ) ; do ping -M do -s $i -c 1 slashdot.org; done",
"lsof -i tcp:22 | grep 192.168.10.10 | awk \"{print $2}\" |xargs kill",
"ls -1 | awk ' { print \"zip \"$1\".zip \" $1 } ' | sh",
"find . -type f -print0 | xargs -0 du -h | sort -hr | head -20find . -mount -type f -printf \"%k %p\n\" | sort -rg | cut -d \  -f 2- | xargs -I {} du -sh {} | less",
"dd if=/dev/zero of=10gb bs=1M count=10240",
"ls -a | sed \"s#^#${PWD}/#\"printf \"$PWD/%s\n\" *ls -d $PWD/*ls -d1 $PWD/{.*,*}find $(pwd) -maxdepth 1 -name \"*\" -printf \"%p\n\"find `pwd` -maxdepth 1 -exec ls --color -d {} \;",
"echo 16i `echo \"F\" | tr '[a-f]' '[A-F]'` p | dc ; echo 16o \"15\" p | dc",
"/bin/rpm -qf /etc/passwd /etc/issue /etc/httpd/conf/httpd.conf",
"find -amin +[n] -deletetouch -t \"YYYYMMDDhhmm.ss\" ~/.ts ; find . -newer ~/.tstouch -t \"YYYYMMDDhhmm.ss\" dummy ; find . -anewer dummyfind <dir> -printf '%p : %A@\n' | awk '{FS=\" : \" ; if($2 < <time in epoc> ) print $1 ;}' | xargs rm --verbose -fr ;",
"pgrep rouge-process | xargs sudo kill -9killall -9 rouge-process",
"find . -type d | while read dir ; do num=`ls -l $dir | grep '^-' | wc -l` ; echo \"$num $dir\" ; done | sort -rnk1 | head",
"for i in be bg cz de es fi fr hu it lv lu at pl pt ro sk si  ; do echo -n \"$i \" ; wget -q -O - http://www.expansys.$i/d.aspx?i=196165 | grep price | sed \"s/.*<p id='price'><strong>&euro; \([0-9]*[,.][0-9]*\).*/\1/g\"; done",
"du -kd | egrep -v \"/.*/\" | sort -nalias dush=\"du -sm *|sort -n|tail\"du -cks * | sort -rn | while read size fname; do for unit in k M G T P E Z Y; do if [ $size -lt 1024 ]; then echo -e \"${size}${unit}\t${fname}\"; break; fi; size=$((size/1024)); done; donedu -hs *|grep M|sort -nalias dush=\"du -xsm * | sort -n | awk '{ printf(\\"%4s MB  ./\\",\$1) ; for (i=1;i<=NF;i++) { if (i>1) printf(\\"%s \\",\$i) } ; printf(\\"\n\\") }' | tail\"",
"perl -wlne 'print $1 if /(([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5]))/' iplistecho 254.003.032.3 | grep -P '^((25[0-4]|2[0-4]\d|[01]?[\d]?[1-9])\.){3}(25[0-4]|2[0-4]\d|[01]?[\d]?[1-9])$'echo 127.0.0.1 | egrep -e '^(([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-4])\.){3}([01]?[0-9]{1,2}|2[0-4][0-9]|25[0-4])$'echo \"123.32.12.134\" | grep -P '([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])\.([01]?\d\d?|2[0-4]\d|25[0-5])'",
"sed 's+href=\"\([^\"]*\)\"+\n\1\n+g' bookmarks.html | grep '^http' |clive",
"<commmand>; if [[ \"$?\" = 0 ]]; then echo ':)'; else echo ':('; fi",
"ZIP=48104; curl http://thefuckingweather.com/?zipcode=$ZIP 2>/dev/null|grep -A1 'div class=\"large\"'|tr '\n' ' '|sed 's/^.*\"large\" >\(..\)/\1/;s/&d.* <br \/>/ - /;s/<br \/>//;s/<\/div.*$//'",
"cd() { if [ -n \"$1\" ]; then [ -f \"$1\" ] && set -- \"${1%/*}\"; else [ -n \"$CDDIR\" ] && set -- \"$CDDIR\"; fi; command cd \"$@\"; }",
"mysqldump --lock-tables --opt DBNAME -u UNAME --password=PASS | gzip > OUTFILEmysqldump -u UNAME -p DBNAME > FILENAME",
"find . -type f|while read f; do mv $f `echo $f |tr '[:upper:]' '[ :lower:]'`; donerename 'y/A-Z/a-z/' *for i in *; do mv \"$i\" \"$(echo $i|tr A-Z a-z)\"; donefind my_root_dir -depth -exec rename 's/(.*)\/([^\/]*)/$1\/\L$2/' {} \;for i in $(find . -type f); do mv \"$i\" \"$(echo $i|tr A-Z a-z)\"; donefind . -depth -print -execdir rename -f 'y/A-Z/a-z/' '{}' \;",
"s3cmd ls s3://bucket.example.com | s3cmd del `awk '{print $4}'`",
"sed -i 's/^\s\+//' <file>sed 's/[ \t]*$//' < <file> > <file>.out; mv <file>.out <file>",
"find /path/to/dir  -type f -printf \"%T@|%p\n\" 2>/dev/null | sort -n | tail -n 1| awk -F\| '{print $2}'newest () { find ${1:-\.} -type f |xargs ls -lrt ; }newest () { candidate=''; for i in \"$@\"; do [[ -f $i ]] || continue;  [[ -z $candidate || $i -nt $candidate ]] && candidate=\"$i\"; done; echo \"$candidate\"; }newest () { DIR=${1:-'.'};  CANDIDATE=`find $DIR -type f|head -n1`; while [[ ! -z $CANDIDATE ]]; do BEST=$CANDIDATE; CANDIDATE=`find $DIR -newer \"$BEST\" -type f|head -n1`; done; echo \"$BEST\"; }",
"ps -eo stat,pid,user,command | egrep \"^STAT|^D|^R\"",
"mplayer -vo null -vc null -ao pcm:fast:file=file.wav file.mp3; faac -b 128 -c 44100 -w file.wav",
"du -s $(ls -l | grep '^d' | awk '{print $9}') | sort -nr",
"ssh user@host.com \"DISPLAY=:0.0 import -window root png:-\" | open -a /Applications/Preview.app -f",
"find . -type f -printf \"%h\n\" | cut -d/ -f-2 | sort | uniq -c | sort -rnps -ef | grep pmon",
"echo -e \"aa\nbb\ncc\ndd\n123\" | sed -e :a -e \"/$/N; s/\n/;/; ta\"cat file | tr \"\n\" \" \"tr \"\n\" \" \" < fileperl -pe 'eof()||s/\n/<SOMETEXT>/g' file.txtawk 'BEGIN{RS=\"\0\"}{gsub(/\n/,\"<SOMETEXT>\");print}' file.txtcat file | tr -d \"\n\"",
"ls /home | head -64 | barcode -t 4x16 | lpr",
"wmic -U DOMAIN/user --password='password'  //IP_HOST \"select Caption,CSDVersion,CSName  from Win32_OperatingSystem\" | grep Windows",
"cowsay $(fortune)fortune | cowsayfortune | cowsay -f tux",
"traceroute 2>/dev/null -n google.com | awk '/^ *1/{print $2;exit}'sudo arp-scan 192.168.1.0/24 -interface eth0",
"for i in $(multipath -ll | grep \"3PARdata,VV\"|awk '{print $1}') ; do parted -a optimal /dev/mapper/$i --script -- mklabel gpt mkpart primary 1 -1 set 1 lvm on ; done",
"import -pause 5 -window root desktop_screenshot.jpg",
"false; while [ $? != 0 ]; do apg -c /dev/urandom -n1 -E oOlL10 | egrep '^[[:alnum:]]+$'; done",
"kded --version | awk -F: 'NR == 2 {print $2}' | sed 's/\s\+//g'kde-open -v | grep Platform | cut -d' ' -f4-",
"find /path/folder -type f -name \"*.*\" -print -exec rm -v {} + | wc -l;",
"sshfs name@server:/path/to/folder /path/to/mount/point",
"cat $(ls -tr | tail -1) | awk '{ a[$1] += 1; } END { for(i in a) printf(\"%d, %s\n\", a[i], i ); }' | sort -n  | tail -25",
"sudo mount -t cifs -o user,username=\"samba username\" //$ip_or_host/$sharename /mntsudo mount -t cifs //$ip_or_host/$sharename /mntsudo mount -t cifs -o credentials=/path/to/credenials //hostname/sharename /mount/point",
"fc-list | cut -d ':' -f 1 | sort -u",
"find -regextype posix-egrep -regex \".*/[A-Z]{3}_201009[0-9]{2}.*\" -printf \"%f %s\n\" | awk '{ SUM += $2;COUNT++ } END { print SUM/1024 \" kb in \" COUNT \" files\" }'",
"rsync -e \"/usr/bin/ssh -p22\" -a --progress --stats --delete -l -z -v -r -p /root/files/ user@remote_server:/root/files/",
"aptitude search -F \"%p\" --disable-columns ~iperl -m'AptPkg::Cache' -le '$c=AptPkg::Cache->new; for (keys %$c){ push @a, $_ if $c->{$_}->{'CurrentState'} eq 'Installed';} print for sort @a;'dpkg --get-selections | awk '$2==\"install\" {print $1}' | sort",
"(sp-sc sop://broker.sopcast.com:3912/6002 3900 8900 &>/dev/null &); sleep 10; mplayer http://localhost:8900/tv.asf(sp-sc sop://broker.sopcast.com:3912/80562 8908 10999 &>/dev/null &); sleep 10; wait $(vlc http://localhost:10999); killall sp-sc",
"seg() { echo -e \"$1\" | while read LINE; do for b in $(seq 10); do echo $LINE.$b; done; done; }",
"for i in `seq 1 1 50`; do  echo -n -; donepython -c 'print \"-\"*50'seq -s\" \" -50 -1 | tr -dc -perl -le'print\"-\"x50'ruby -e 'puts \"-\" * 50'awk 'BEGIN{while (a++<50) s=s \"-\"; print s}'",
"cut -d: -f1 /etc/passwd | sortcut -d: -f1 /etc/passwd | sortawk -F ':' '{print $1 | \"sort\";}' /etc/passwdgetent passwd | cut -d: -f1 | sort",
"watch -n 2 -d '/sbin/ifconfig eth0'",
"find -print0 | xargs -0 -n 1 -P 4 -I {} sh -c \"zcat '{}' | mysql nix\"",
"vim -p `ls *.java *.xml *.txt *.bnd 2>/dev/null`",
"gnome-terminal --tab --tab --tab",
"cvs -Q status | perl -ne 'print if m/^File.+Status: (?!Up-to-date)/ .. m/^=/;'cvs -Q status | grep -i locallycvs -n update 2>null | grep -i \"M \" | sed s/\"M \"//cvs up 2>&1 | grep --color 'U \|P \|A \|R \|M \|C \|? 'cvs -q diff --brief | grep file | cut -d/ -f3- | cut -d',' -f1",
"alias histdel='history -d $((HISTCMD-2)) && history -d $((HISTCMD-1))'",
"mount -t msdos /dev/fd0 /mnt/floppy",
"find $SDIR -name '${f}.*' -mtime +$n -maxdepth 1 | xargs -n 10 rm -vf",
"echo \"The date is: $(date +%D)\"",
"ls \"~/Music/iTunes/iTunes Media/Mobile Applications\" > filepathls \"`defaults read com.apple.itunes NSNavLastRootDirectory`/iTunes/iTunes Music/Mobile Applications/\" > filepathcd \"~/Music/iTunes/iTunes Media/Mobile Applications\";ls > filepath",
"apod(){ local x=http://antwrp.gsfc.nasa.gov/apod/;feh $x$(curl -s ${x}astropix.html|grep -Pom1 'image/\d+/.*\.\w+');}",
"plink -v -ssh -N -D 8580 -l USERNAME -pw PASSWARD 192.168.2.12",
"tar -c directory_to_compress/ | pbzip2 -vc > myfile.tar.bz2",
"echo \"test\" | sed 'y/abcdefghijklmnopqrstuvwxyz/ABCDEFGHIJKLMNOPQRSTUVWXYZ/'",
"for i in {a..z} ; do  man -k $i |grep -i \"^$i\" |wc | awk 'BEGIN { OFS = \":\"; ORS = \"\" }{print  $1, \"\t\"}' && echo $i  ;done",
"grep --exclude-dir=.svn --exclude=*~ -i \"TODO\" -rl .find . -iname '*TODO*'",
"find ./ -size +10M -type f -print0 | xargs -0 ls -Ssh1 --color",
"XZ_OPT=-9 tar cJf tarfile.tar.xz directory",
"complete -W \"$(echo $(grep '^ssh ' .bash_history | sort -u | sed 's/^ssh //'))\" sshcomplete -W \"$(echo `cat ~/.ssh/known_hosts | cut -f 1 -d ' ' | sed -e s/,.*//g | uniq | grep -v \"\[\"`;)\" sshperl -ne 'print \"$1 \" if /^Host (.+)$/' ~/.ssh/configcomplete -W \"$(sed 's/;.*//;' /etc/hosts | awk ' /^[[:digit:]]/ {$1 = \"\";print tolower($0)}')\" sshcomplete -W \"$(while IFS=' ,' read host t; do echo $host; done < ~/.ssh/known_hosts)\" sshcomplete -W \"$(echo `cat ~/.ssh/known_hosts | cut -f 1 -d ' ' | sed -e s/,.*//g | uniq | grep -v \"\[\"`;)\" ssh",
"find . -name '*.java' -o -name '*.xml' | grep -v '\.svn' | xargs wc -l",
"perl -pi -e 's/:([\w\d_]+)(\s*)=>/\1:/g' **/*.rb",
"i=$((15*60)); while [ $i -gt 0 ]; do clear; echo $i | figlet; sleep 1; i=$(($i-1)); done;watch -tn1 'date +%r | figlet'",
"v=/dev/vg0/lv0; lvextend -L+200G $v && resize2fs $v",
"find . -type f -name *.MP3 -print0 | xargs -0 -i rename .MP3 .mp3 {}",
"wget -r --no-parent http://codeigniter.com/user_guide/ ; mv codeigniter.com/user_guide/* . ; rm -rf codeigniter.comsvn co http://svn.ellislab.com/CodeIgniter/trunk/user_guide",
"echo /home/foo/dir1/bar |  awk -F/ -v OFS=/ '{$3 = \"dir2\"}1'",
"while true; do curl -s http://sensiblepassword.com/?harder=1 | tail -n 15 | head -n 1 | sed 's;<br/>;;' | cut -c 5- | cb; sleep 1; done",
"mount /dev/root /mnt/root; rsync -avHX /mnt/root/ /mnt/target/rsync -aHux --exclude=/proc/* --exclude=/sys/* /* /mnt/target/cp -dpRx /* /mnt/target/",
"find . -type f|perl -lne '@x=sort {$b->[0]<=>$a->[0]}[(stat($_))[7],$_],@x;splice(@x,11);print \"@{$x[0]}\";END{for(@x){print \"@$_\"}'find . -type f -printf '%20s %p\n' | sort -n | cut -b22- | tr '\n' '\000' | xargs -0 ls -laSr",
"firefox 'data:text/html, <html contenteditable>'",
"mkfs.vfat /dev/sdc1mkdosfs /dev/sdx1",
"(pv -n ~/database.sql | mysql -u root -pPASSWORD -D database_name) 2>&1 | zenity --width 550 --progress --auto-close --auto-kill --title \"Importing into MySQL\" --text \"Importing into the database\"",
"rpm -qf /etc/*-releasecat /etc/issuecat /etc/*releaselsb_release -alsb_release -atest `uname` = Linux && lsb_release -a || ( test `uname` = SunOS && cat /etc/release || uname -rms )",
"tar -jcvf /folder/file.tar.bz2 --same-owner --same-permissions /folder/",
"ldapsearch -LLL  -H ldap://${HOST}:389 -b 'DC=${DOMAIN},DC=${TLD}' -D '${USER}' -w 'password' objectclass=* -E pr=2147483647/noprompt",
"curl -s http://geoiplookup.wikimedia.org/ | python3 -c 'import sys, json, string, webbrowser; webbrowser.open(string.Template(\"http://maps.google.com/maps?q=$lat,$lon\").substitute(json.loads(sys.stdin.read().split(\"=\")[-1])))'curl -s http://geoiplookup.wikimedia.org/|awk -F, '{print $3,$4}'|awk -F'\"' '{print \"http://maps.google.com/maps?q=\"$4 \",\" $8}'",
"file -i * | grep -c 'text/plain'file -i * | grep 'text/plain' | wc -l",
"sed 's/^M$//' input.txt > output.txtdos2unix <file>tr -d '\r' < <input> > <output>fromdos <file>",
"script -qf | tee >(nc -kl 5000) >(nc -kl 5001) >(nc -kl 5002)bash -i 2>&1 | tee /dev/stderr | nc -l 5000script -qf >(nc -ub 192.168.1.255 5000)script -qf | tee >(nc -l -p 5000)",
"Command in description (Your command is too long - please keep it to less than 255 characters)Command in description (Your command is too long - please keep it to less than 255 characters)",
"watch 'ls -tr1 | tail -n1 | xargs tail'",
"echo 'Host or User@Host?:'; read newserver && ssh-keygen -N \"\" -t rsa -f ~/.ssh/id_rsa ; ssh $newserver cat <~/.ssh/id_rsa.pub \">>\" ~/.ssh/authorized_keys ; ssh $newserver"
]}